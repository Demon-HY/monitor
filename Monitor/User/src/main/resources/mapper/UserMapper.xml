<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monitor.user.domain.UserMapper">
    <resultMap id="UserResultMap" type="com.monitor.user.domain.UserInfo">
        <id column="uid"  property="uid" />
        <result column="name"  property="name" />
        <result column="phone"  property="phone" />
        <result column="email"  property="email" />
        <result column="nick"  property="nick" />
        <result column="password"  property="password" />
        <result column="type"  property="type" />
        <result column="status"  property="status" />
        <result column="exattr"  property="exattr" />
        <result column="ctime"  property="ctime" />
        <result column="mtime"  property="mtime" />
        <result column="last_time"  property="last_time" />

    </resultMap>


    <sql id="Base_Column_List">
        uid,name,phone,email,nick,password,type,status,exattr,ctime,mtime,last_time
    </sql>

    <select id="findById" parameterType="java.lang.Integer" resultMap="UserResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where uid = #{uid}
    </select>

    <!-- mybatis 非常的智能，返回值统一使用 resultMap="BaseResultMap"，mybatis会根据查询到的条目数量自动进行判断，如果是一条就返回对象，如果是多条就返回List对象列表-->
    <select id="findByName" parameterType="java.lang.String" resultMap="UserResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where name = #{name}
    </select>

    <select id="findAll"  resultMap="UserResultMap">
        select
        <include refid="Base_Column_List" />
        from user
    </select>

    <select id="findByParams" resultMap="UserResultMap" parameterType="com.monitor.user.UserInfo">
        select
        <include refid="Base_Column_List" />
        from user
        <where>
            <if test="uid != null">
                uid = #{uid}
            </if>
        </where>
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from user
        where uid = #{uid}
    </delete>

    <insert id="create" useGeneratedKeys="true" keyProperty="uid" parameterType="com.monitor.user.UserInfo">
        insert into
        user (name,phone,email,nick,password,type,status,exattr,ctime,mtime,last_time)
        values
        (#{name},#{phone},#{email},#{nick},#{password},#{type},#{status},#{exattr},#{ctime},#{mtime},#{lastTime})
    </insert>

    <update id="update" parameterType="com.monitor.user.UserInfo">
        update user
        <set>

            <if test="name != null">
                name = #{name},
            </if>

            <if test="phone != null">
                phone = #{phone},
            </if>

            <if test="email != null">
                email = #{email},
            </if>

            <if test="nick != null">
                nick = #{nick},
            </if>

            <if test="password != null">
                password = #{password},
            </if>

            <if test="type != null">
                type = #{type},
            </if>

            <if test="status != null">
                status = #{status},
            </if>

            <if test="exattr != null">
                exattr = #{exattr},
            </if>

            <if test="ctime != null">
                ctime = #{ctime},
            </if>

            <if test="mtime != null">
                mtime = #{mtime},
            </if>

            <if test="lastTime != null">
                last_time = #{lastTime},
            </if>

        </set>
        where uid = #{uid}
    </update>
</mapper>